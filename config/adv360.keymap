
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp LC(LA(DEL))             &none      &none       &none      &none   &none                &none                                                                         &mo 2   &none   &none     &none      &none   &none      &kp LC(LG(Q))
           &none             &none  &kp COMMA  &kp PERIOD      &kp P   &kp Y                &none                                                                         &none   &kp F   &kp G     &kp C      &kp R   &none  &kp RIGHT_COMMAND
    &kp LEFT_ALT  &kp SINGLE_QUOTE      &kp O       &kp E      &kp U   &kp I            &kp PG_UP  &lt 4 F11  &lt 1 NUMBER_1                   &lt 1 N1    &lt 5 F12  &kp PG_DN   &kp D   &kp H     &kp T      &kp N   &kp L  &kp RIGHT_CONTROL
         &kp TAB             &kp A      &kp Q       &kp J      &kp K   &kp X                                           &none                      &none                           &kp B   &kp M     &kp W      &kp V   &kp S          &kp MINUS
  &kp LEFT_SHIFT          &kp SEMI  &kp SLASH    &kp LEFT  &kp RIGHT                    &kp SPACE  &lt 6 ESC       &lt 4 F11                  &lt 5 F12  &lt 3 ENTER   &kp BSPC          &kp UP  &kp DOWN  &kp EQUAL   &kp Z    &kp RIGHT_SHIFT
            >;
        };

        layer_OYAINPUT {
            bindings = <
  &none            &none            &none      &none      &none      &none             &none                                                   &none      &none      &none      &none        &none             &none           &trans
  &none      &macro_JPN1        &macro_KA  &macro_TA  &macro_KO  &macro_SA             &none                                                   &none  &macro_RA  &macro_TI  &macro_KU    &macro_TU             &none           &trans
  &none  &macro_JPPERIOD        &macro_SI  &macro_TE  &macro_KE  &macro_SE            &trans  &trans  &trans                  &trans  &trans  &trans  &macro_HA  &macro_TO  &macro_KI     &macro_I   &macro_JPCOMMA1           &trans
 &trans         &macro_U        &macro_HI  &macro_SU  &macro_HU  &macro_HE                            &trans                  &trans                  &macro_ME  &macro_SO  &macro_NE    &macro_HO         &macro_NN  &macro_JPMINUS1
  &none     &macro_JPTEN  &macro_JPCOMMA2     &trans     &trans                       &trans  &trans  &trans                  &trans  &trans  &trans                &trans     &trans  &macro_JPEN  &macro_JPNAKATEN            &none
            >;
        };

        layer_BLUETOOTH {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                          &bootloader   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none        &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                            &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG        &none           &none   &none   &none   &none   &none
            >;
        };

        layer_control {
            bindings = <
              &none                 &none          &none           &none          &none      &none                    &none                                                                 &none      &none       &none         &none          &none      &none                  &none
              &none                 &none  &kp LC(COMMA)  &kp LC(PERIOD)      &kp LC(P)  &kp LC(Y)                    &none                                                                 &none  &kp LC(F)   &kp LC(G)     &kp LC(C)      &kp LC(R)      &none  &kp LC(RIGHT_COMMAND)
   &kp LC(LEFT_ALT)  &kp LC(SINGLE_QUOTE)      &kp LC(O)       &kp LC(E)      &kp LC(U)  &kp LC(I)            &kp LC(PG_UP)          &none   &none                   &none   &none  &kp LC(PG_DN)  &kp LC(D)   &kp LC(H)     &kp LC(T)      &kp LC(N)  &kp LC(L)                  &none
        &kp LC(TAB)             &kp LC(A)      &kp LC(Q)       &kp LC(J)      &kp LC(K)  &kp LC(X)                                           &none                   &none                         &kp LC(B)   &kp LC(M)     &kp LC(W)      &kp LC(V)  &kp LC(S)          &kp LC(MINUS)
 &kp LC(LEFT_SHIFT)          &kp LC(SEMI)  &kp LC(SLASH)    &kp LC(LEFT)  &kp LC(RIGHT)                       &kp LC(SPACE)  &kp LC(ENTER)   &none                   &none   &none          &none             &kp LC(UP)  &kp LC(DOWN)  &kp LC(EQUAL)  &kp LC(Z)    &kp LC(RIGHT_SHIFT)
            >;
        };

        layer_alt {
            bindings = <
              &none                 &none          &none           &none          &none      &none                    &none                                                                     &none      &none       &none         &none          &none      &none                  &none
              &none                 &none  &kp LA(COMMA)  &kp LA(PERIOD)      &kp LA(P)  &kp LA(Y)                    &none                                                                     &none  &kp LA(F)   &kp LA(G)     &kp LA(C)      &kp LA(R)      &none  &kp LA(RIGHT_COMMAND)
              &none  &kp LA(SINGLE_QUOTE)      &kp LA(O)       &kp LA(E)      &kp LA(U)  &kp LA(I)            &kp LA(PG_UP)   &none   &none                   &none          &none      &kp LA(PG_DN)  &kp LA(D)   &kp LA(H)     &kp LA(T)      &kp LA(N)  &kp LA(L)  &kp LA(RIGHT_CONTROL)
        &kp LA(TAB)             &kp LA(A)      &kp LA(Q)       &kp LA(J)      &kp LA(K)  &kp LA(X)                                    &none                   &none                                    &kp LA(B)   &kp LA(M)     &kp LA(W)      &kp LA(V)  &kp LA(S)          &kp LA(MINUS)
 &kp LA(LEFT_SHIFT)          &kp LA(SEMI)  &kp LA(SLASH)    &kp LA(LEFT)  &kp LA(RIGHT)                               &none   &none   &none                   &none  &kp LA(ENTER)  &kp LA(BACKSPACE)             &kp LA(UP)  &kp LA(DOWN)  &kp LA(EQUAL)  &kp LA(Z)    &kp LA(RIGHT_SHIFT)
            >;
        };

        layer_command {
            bindings = <
              &none                 &none          &none           &none          &none      &none                    &none                                                               &none      &none       &none         &none          &none      &none                  &none
              &none                 &none  &kp LG(COMMA)  &kp LG(PERIOD)      &kp LG(P)  &kp LG(Y)                    &none                                                               &none  &kp LG(F)   &kp LG(G)     &kp LG(C)      &kp LG(R)      &none                  &none
       &kp LG(LALT)  &kp LG(SINGLE_QUOTE)      &kp LG(O)       &kp LG(E)      &kp LG(U)  &kp LG(I)            &kp LG(PG_UP)        &none   &none                   &none   &none  &kp LG(PG_DN)  &kp LG(D)   &kp LG(H)     &kp LG(T)      &kp LG(N)  &kp LG(L)  &kp LG(RIGHT_CONTROL)
        &kp LG(TAB)             &kp LG(A)      &kp LG(Q)       &kp LG(J)      &kp LG(K)  &kp LG(X)                                         &none                   &none                         &kp LG(B)   &kp LG(M)     &kp LG(W)      &kp LG(V)  &kp LG(S)          &kp LG(MINUS)
 &kp LG(LEFT_SHIFT)          &kp LG(SEMI)  &kp LG(SLASH)    &kp LG(LEFT)  &kp LG(RIGHT)                       &kp LG(SPACE)  &kp LG(ESC)   &none                   &none   &none          &none             &kp LG(UP)  &kp LG(DOWN)  &kp LG(EQUAL)  &kp LG(Z)    &kp LG(RIGHT_SHIFT)
            >;
        };

        layer_function {
            bindings = <
  &none         &none          &none         &none         &none         &none            &none                                                                &none         &none         &none          &none         &none         &none   &none
  &none         &none         &kp F2        &kp F3        &kp F4        &kp F5            &none                                                                &none        &kp F6        &kp F7         &kp F8        &kp F9         &none   &none
  &none        &kp F1   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &none   &none   &none                       &none  &kp LA(F4)        &none  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9       &kp F10   &none
  &none  &kp NUMBER_1      &kp TILDE      &kp LBKT      &kp LPAR      &kp LBRC                            &none                       &none                               &kp RBRC      &kp RPAR       &kp RBKT      &kp PIPE  &kp NUMBER_0   &none
  &none         &none  &kp BACKSLASH      &kp HOME       &kp END                          &none   &none   &none                  &kp LA(F4)   &kp LC(W)  &kp LA(TAB)                   &kp PG_UP  &kp PAGE_DOWN     &kp GRAVE         &none   &none
            >;
        };

    };
};
